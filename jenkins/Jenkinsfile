pipeline {
    agent {
        kubernetes {
          cloud "my-gke-cluster"
          yaml '''
apiVersion: v1
kind: Pod
metadata:
  name: docker-pod
spec:
  containers:
  - name: kubectl
    image: joshendriks/alpine-k8s
    command: ['cat']
    tty: true
  - name: docker
    image: docker:latest
    command:
    - cat
    tty: true
    volumeMounts:
     - mountPath: /var/run/docker.sock
       name: docker-sock
  volumes:
  - name: docker-sock
    hostPath:
      path: /var/run/docker.sock 
        '''
        }
    }
    environment {
        PROJECT_ID = 'omar-gcp-project-1'
        CLUSTER_NAME = 'my-gke-cluster'
        LOCATION = 'europe-west2-a'
        CREDENTIALS_ID = 'gke'
    }

    
    stages {
        stage('Building-Docker-Image') {
            steps {
                container('docker') {
                  sh 'pwd' 
                  sh 'whoami'
                  sh 'ls'
                  sh 'docker build -t omarkamal1/nodeapp:1.0 .'
                    
                }
            }
        }
        stage('Pushing-Docker-Image') {
            steps {
                container('docker') {
                    withCredentials([usernamePassword(credentialsId: 'docker', passwordVariable: 'pass', usernameVariable: 'user')]) {
                    // the code here can access $pass and $user
                      sh 'pwd' 
                      sh 'ls'
                      sh 'echo  ${user}  ${pass}'
                      sh 'docker login -u=${user} -p=${pass} '
                      sh 'docker push omarkamal1/nodeapp:1.0' 
                    }
                }
            }
        } 
        stage('Kubecl-Deploy') {
            steps {
                sh 'pwd' 
                sh 'ls'
                container('kubectl') {
                    withCredentials([
                        file(credentialsId: 'kubeconfig', variable: 'KUBECONFIG'),
                        file(credentialsId: 'gcp_cred', variable: 'GOOGLE_APPLICATION_CREDENTIALS')
                        ]) {
                       // sh 'sed -i "s/<TAG>/${BUILD_NUMBER}/" myweb.yaml'
                        sh 'ls' 
                        sh 'kubectl apply -f deployment.yaml '
                    }
                }
                
                
            }
        } 
    }
}